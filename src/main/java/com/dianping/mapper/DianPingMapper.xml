<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianping.dao.DianPingDAO">
<!--设置domain类和数据库中表的字段一一对应，注意数据库字段和domain类中的字段名称不致，此处一定要！ 
	<resultMap id="BaseResultMap" type="com.dianping.model.ProxyIpInfo">
		<id column="ip" property="ip" jdbcType="VARCHAR" />
		<result column="port" property="port" jdbcType="INTEGER" />
	</resultMap>-->

	<!-- 添加单条记录 -->
	<insert id="add" parameterType="com.dianping.model.DianPingInfo" >
		insert
			 into 
		t_shop
			 (id,shopName,average,taste,env,service,address,cookStyle,comment,tag,url,img,createTime,shopId)
		 values
		    (uuid(),#{shopName},#{average},#{taste},#{env},#{service},#{address},#{cookStyle},#{comment},#{tag},#{url},#{img},now(),#{shopId})

	</insert>
	
	<select id="findExist" resultType="String">
		select url from t_shop
	</select>
	
	
		<select id="findAll" resultType="com.dianping.model.DianPingInfo">
		select id,shopId,url from t_shop
	</select>
	
	<update id="update" parameterType="com.dianping.model.DianPingInfo">
		update t_shop
		<trim prefix="SET" suffixOverrides=",">
			createTime = now(),
			<if test="taste !=null and taste !=''">
				taste = #{taste},
			</if>
			<if test="shopId !=null and shopId !=''">
				shopId = #{shopId},
			</if>
			<if test="env !=null and env !=''">
				env = #{env},
			</if>
			<if test="service !=null and service !=''">
				service = #{service},
			</if>
			<if test="shopName !=null and shopName !=''">
				shopName = #{shopName},
			</if>
			<if test="comment !=null and comment !=''">
				comment = #{comment},
			</if>
			<if test="address !=null and address !=''">
				address = #{address},
			</if>
			<if test="cookStyle !=null and cookStyle !=''">
				cookStyle = #{cookStyle},
			</if>
			<if test="average !=null and average !=''">
				average = #{average},
			</if>
		</trim>
		where id = #{id}
	</update>
	
	
	<select id="findStarByShopId" parameterType="String" resultType="com.dianping.model.ShopStarEntity">
		select * from t_shop_star where shopId = #{shopId}
	</select>
	
	<select id="findStarChildByShopId" parameterType="String" resultType="com.dianping.model.ShopStarEntityExtend">
		select * from t_shop_star_child where shopId = #{shopId}
	</select>
	
	<select id="findStarChildByUrl" parameterType="String" resultType="com.dianping.model.ShopStarEntityExtend">
		select * from t_shop_star_child where url = #{url}
	</select>
	
	<select id="findStarAll" parameterType="String" resultType="com.dianping.model.ShopStarEntity">
		select id,fiveStar,fourStar,threeStar,twoStar,oneStar,shopId,score from t_shop_star 
	</select>
	
	<select id='findShopIdByStar' resultType="String">
		select DISTINCT(shopid) from t_shop_star
	</select>
	
		<update id="updateStar" parameterType="com.dianping.model.ShopStarEntity">
		update t_shop_star
		<trim prefix="SET" suffixOverrides=",">
			createTime = now(),
			<if test="fiveStar !=null and fiveStar !=''">
				fiveStar = #{fiveStar},
			</if>
			<if test="fourStar !=null and fourStar !=''">
				fourStar = #{fourStar},
			</if>
			<if test="threeStar !=null and threeStar !=''">
				threeStar = #{threeStar},
			</if>
			<if test="twoStar !=null and twoStar !=''">
				twoStar = #{twoStar},
			</if>
			<if test="oneStar !=null and oneStar !=''">
				oneStar = #{oneStar},
			</if>
			
		</trim>
		where shopId = #{shopId}
	</update>
	
	
	<insert id="addStar" parameterType="com.dianping.model.ShopStarEntity" >
		insert
			 into 
		t_shop_star
			 (id,shopId,oneStar,twoStar,threeStar,fourStar,fiveStar,createTime)
		 values
		    (#{id},#{shopId},#{oneStar},#{twoStar},#{threeStar},#{fourStar},#{fiveStar},now())

	</insert>
	
	<insert id="addStarChild" parameterType="com.dianping.model.ShopStarEntity" >
		insert
			 into 
		t_shop_star_child
			 (parentId,id,shopId,oneStar,twoStar,threeStar,fourStar,fiveStar,createTime,url)
		 values
		    (#{parentId},uuid(),#{shopId},#{oneStar},#{twoStar},#{threeStar},#{fourStar},#{fiveStar},now(),#{url})

	</insert>
	
	
	
	
	<select id="findMaxPage" parameterType="String">
		select MAX(subString(SPLIT_STR(url,'/',7),2)+0)  from t_shop_star_child where shopId=#{shopId} 
	</select>
	
	<select id='findStarShopId' resultType="String">
		select shopId from t_rank_shop where refinedScore1>8 GROUP BY shopId ORDER BY count(shopId) desc
		
	</select>
	
	<select id='findRecommend' resultType="com.dianping.model.RankShopInfo" parameterType="String" >
		
		SELECT DISTINCT(r.shopId),t.shopName,t.rankTime,t.refinedScore1,t.refinedScore2,t.refinedScore3,t.address,t.defaultPic,t.avgPrice,t.url
		FROM (
		SELECT shopId,MAX(rankTime)as MaxTime,count(shopId) as num
		      FROM t_rank_shop
		      GROUP BY shopId
		) r
		INNER JOIN t_rank_shop t
		ON t.shopId = r.shopId AND t.rankTime = r.MaxTime
		where t.refinedScore1>8
		<if test="category!=null and category!=''">
			and t.categoryId = #{category}
		</if>
		ORDER BY r.num desc
		
	</select>
	
	
	<insert id="addAppraise" parameterType="com.dianping.model.AppraiseEntity" >
		insert
			 into 
		t_shop_appraise
			 (shopId,good,common,bad,score1,score2,createTime)
		 values
		    (#{shopId},#{good},#{common},#{bad},#{score1},#{score2},now())

	</insert>
	
	<select id='findByShopId' resultType="com.dianping.model.AppraiseEntity" parameterType="String" >
		select * from t_shop_appraise where shopId = #{shopId}
	
	</select>
	
	<update id="updateAppraiseEntity" parameterType="com.dianping.model.AppraiseEntity">
		update t_shop_appraise
		<trim prefix="SET" suffixOverrides=",">
			createTime = now(),
			<if test="good !=null and good !=''">
				good = #{good},
			</if>
			<if test="common !=null and common !=''">
				common = #{common},
			</if>
			<if test="bad !=null and bad !=''">
				bad = #{bad},
			</if>
			<if test="score1 !=null and score1 !=''">
				score1 = #{score1},
			</if>
			<if test="score2 !=null and score2 !=''">
				score2 = #{score2},
			</if>
			
		</trim>
		where shopId = #{shopId}
	</update>
	
	
	
	
</mapper>